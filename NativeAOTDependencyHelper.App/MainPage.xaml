<?xml version="1.0" encoding="utf-8" ?>
<Page x:Class="NativeAOTDependencyHelper.App.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="using:NativeAOTDependencyHelper.App.Controls"
      xmlns:converters="using:CommunityToolkit.WinUI.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:NativeAOTDependencyHelper.App"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:models="using:NativeAOTDependencyHelper.Core.Models"
      xmlns:services="using:NativeAOTDependencyHelper.ViewModels.Services"
      xmlns:toolkit="using:CommunityToolkit.WinUI.Controls"
      xmlns:viewModels="using:NativeAOTDependencyHelper.ViewModels"
      x:DefaultBindMode="OneWay"
      mc:Ignorable="d">

    <Page.Resources>
        <converters:TaskResultConverter x:Key="TaskResultConverter" />
        <converters:DoubleToVisibilityConverter x:Key="DoubleToVisibilityConverter"
                                                GreaterThan="0" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:SwitchConverter x:Key="LevelToColorSwitchConverter"
                                    TargetType="services:LogItemLevel">
            <toolkit:Case Value="Info" Content="{ThemeResource SystemFillColorNeutralBrush}" />
            <toolkit:Case Value="Warning" Content="{ThemeResource SystemFillColorCautionBrush}" />
            <toolkit:Case Value="Error" Content="{ThemeResource SystemFillColorCriticalBrush}" />
        </converters:SwitchConverter>
    </Page.Resources>

    <Grid Padding="16"
          RowSpacing="8">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid Grid.ColumnSpan="2"
              Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
              BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
              BorderThickness="1"
              CornerRadius="{StaticResource OverlayCornerRadius}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Padding="8,0,0,0"
                        Orientation="Horizontal"
                        Spacing="12">
                <!--  TODO: We should also disable this button when our ProcessSolutionFileCommand is working...  -->
                <Button Click="OpenSolution_Click"
                        Content="Open .sln.."
                        IsEnabled="{x:Bind local:MainPage.IsTaskSuccessful(ViewModel.DotnetVersionCommand.ExecutionTask.Status)}"
                        Style="{StaticResource AccentButtonStyle}" />
                <ProgressBar Value="{x:Bind ViewModel.ChecksProcessed}"
                             Width="128"
                             Height="24"
                             Maximum="{x:Bind ViewModel.TotalChecks}"
                             Visibility="{x:Bind ViewModel.IsWorking}" />
                <StackPanel Orientation="Horizontal"
                            Visibility="{x:Bind ViewModel.IsWorking}">
                    <TextBlock VerticalAlignment="Center">
                        <Run Text="{x:Bind ViewModel.PackagesProcessed}" />
                        <Run Text=" of " />
                        <Run Text="{x:Bind ViewModel.TotalPackages}" />
                        <Run Text=" packages processed" />
                    </TextBlock>
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Column="1"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Orientation="Horizontal"
                        Spacing="8">
                <TextBlock Margin="0,0,0,-12"
                           VerticalAlignment="Center"
                           Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                           Style="{StaticResource CaptionTextBlockStyle}"
                           Text="{x:Bind ViewModel.DotnetVersionCommand.ExecutionTask, Converter={StaticResource TaskResultConverter}}" />
                <CommandBar VerticalAlignment="Center"
                            Background="Transparent"
                            DefaultLabelPosition="Right"
                            IsOpen="False">
                    <!--  TO DO: Make these work  -->
                    <AppBarButton Icon="Refresh"
                                  Label="Reload" />
                    <AppBarButton Icon="Cancel"
                                  Label="Cancel" />
                </CommandBar>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1"
              ColumnSpacing="16"
              RowSpacing="8"
              Visibility="{x:Bind ViewModel.Packages.Count, Converter={StaticResource DoubleToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TextBlock Margin="1,16,0,4"
                       Style="{StaticResource BodyStrongTextBlockStyle}">
                <Run Text="Packages (" /><Run Text="{x:Bind ViewModel.Packages.Count}" /><Run Text=")" />
            </TextBlock>

            <ItemsView x:Name="DependencyView"
                       Grid.Row="1"
                       ItemsSource="{x:Bind ViewModel.Packages}"
                       SelectionMode="Single">
                <ItemsView.Layout>
                    <StackLayout Spacing="4" />
                </ItemsView.Layout>
                <ItemsView.ItemTemplate>
                    <DataTemplate x:DataType="viewModels:NuGetPackageViewModel"
                                  x:DefaultBindMode="OneWay">
                        <ItemContainer>
                            <toolkit:SettingsCard Header="{x:Bind Info.Name}">
                                <toolkit:SettingsCard.HeaderIcon>
                                    <!--  TO DO: Replace with Nuget package icon?  -->
                                    <FontIcon Glyph="&#xF158;" />
                                </toolkit:SettingsCard.HeaderIcon>
                                <toolkit:SettingsCard.Description>
                                    <ItemsControl ItemsSource="{x:Bind Info.ProjectReferences}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate x:DataType="models:NuGetPackageProjectReference">
                                                <TextBlock>
                                                    <Run Text="{x:Bind ParentProjectPath}" />
                                                    <Run Text=" • " />
                                                    <Run Text="{x:Bind Framework}" />
                                                </TextBlock>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </toolkit:SettingsCard.Description>
                                <toolkit:SwitchPresenter Value="{x:Bind LoadStatus}"
                                                         TargetType="models:PackageLoadStatus">
                                    <toolkit:Case Value="Success">
                                        <TextBlock VerticalAlignment="Center">
                                            <Run Text="{x:Bind PassedChecks}" />
                                            <Run Text=" / " />
                                            <Run Text="{x:Bind TotalChecks}" />
                                            <Run Text=" checks passed" />
                                        </TextBlock>
                                    </toolkit:Case>
                                    <toolkit:Case Value="Error">
                                        <TextBlock FontSize="20"
                                                   Text="❗" />
                                    </toolkit:Case>
                                    <toolkit:Case IsDefault="True">
                                        <ProgressRing Value="{x:Bind ReportsCompleted}"
                                                      Width="24"
                                                      Height="24"
                                                      Background="DarkGray"
                                                      IsActive="True"
                                                      IsIndeterminate="False"
                                                      Maximum="{x:Bind TotalReports}" />
                                    </toolkit:Case>
                                </toolkit:SwitchPresenter>
                            </toolkit:SettingsCard>
                        </ItemContainer>
                    </DataTemplate>
                </ItemsView.ItemTemplate>
            </ItemsView>
            <!--  Details Page  -->

            <TextBlock Grid.Column="1"
                       Margin="1,16,0,4"
                       Style="{StaticResource BodyStrongTextBlockStyle}"
                       Text="Details" />
            <Grid Grid.Row="1"
                  Grid.Column="1"
                  Padding="12"
                  Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
                  BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                  BorderThickness="1"
                  CornerRadius="{StaticResource OverlayCornerRadius}">
                <ScrollViewer>
                    <controls:DetailsControl x:Name="DetailsController"
                                             Margin="12"
                                             ViewModel="{x:Bind (viewModels:NuGetPackageViewModel)DependencyView.SelectedItem}" />
                </ScrollViewer>
            </Grid>
        </Grid>

        <toolkit:HeaderedContentControl Grid.Row="1" Visibility="{x:Bind ViewModel.IsViewEmpty, Converter={StaticResource BoolToVisibilityConverter}}">
            <toolkit:HeaderedContentControl.Header>
                <TextBlock Padding="8" Text="Welcome to the Native AOT Dependency Helper Tool" Style="{StaticResource HeaderTextBlockStyle}"/>
            </toolkit:HeaderedContentControl.Header>
            <StackPanel Padding="8,0,0,0"
                        Orientation="Vertical"
                        Spacing="12">
                <TextBlock Text="To get started with using the tool, click the 'Open .sln' button in the top left corner and upload the solution file for the project you'd like to check."/>
                <TextBlock Text="About this tool" Style="{StaticResource SubheaderTextBlockStyle}"/>

                <TextBlock TextWrapping="WrapWholeWords">
                       The tool bubbles up the following data and performs a series of 'checks' to gauge how well a dependency may support AOT.
                        <LineBreak/><LineBreak/>This information is retrieved and bubbled up for each dependency in your project, as well as general information like the package ID, whether or not its directly referenced or a transitive dependency, as well as the requested and resolved versions from each referencing project.
                        <LineBreak/><LineBreak/><Bold>'Reports'</Bold> just provide general information to bubble up for each package.
                        <LineBreak/><LineBreak/><Bold>'Checks'</Bold> look specifically for things that may indicate potential issues with AOT compatibility.
                        <LineBreak/><LineBreak/>Passing a check does not guarantee AOT compatibility, conversely failing a check indicated something to investigate or be aware of vs. it being strictly not able to function when AOT is turned on. These are aids to discovery of potentially short comings, known issues, or gaps with your dependency chain to be aware of before attempting to add this functionality to your application.
                        <LineBreak/><LineBreak/>Here are the following checks performed:
                </TextBlock>
                
                <ListView x:Name="InfoView"
                       ItemsSource="{x:Bind ViewModel.GetReportAndCheckTypes}"
                       SelectionMode="None">
                    <ListView.Header>
                        <toolkit:DataTable Margin="12,12"
                                  ColumnSpacing="16">
                            <toolkit:DataColumn DesiredWidth="100">
                                <TextBlock TextWrapping="WrapWholeWords" Foreground="{ThemeResource TextFillColorSecondaryBrush}" Style="{StaticResource SubtitleTextBlockStyle}"  Text="Type" />
                            </toolkit:DataColumn>
                            <toolkit:DataColumn DesiredWidth="200">
                                <TextBlock TextWrapping="WrapWholeWords" Foreground="{ThemeResource TextFillColorSecondaryBrush}" Style="{StaticResource SubtitleTextBlockStyle}" Text="Category" />
                            </toolkit:DataColumn>
                            <toolkit:DataColumn DesiredWidth="300">
                                <TextBlock  TextWrapping="WrapWholeWords" Foreground="{ThemeResource TextFillColorSecondaryBrush}" Style="{StaticResource SubtitleTextBlockStyle}" Text="Name" />
                            </toolkit:DataColumn>
                            <toolkit:DataColumn CanResize="True">
                                <TextBlock TextWrapping="WrapWholeWords" Foreground="{ThemeResource TextFillColorSecondaryBrush}" Style="{StaticResource SubtitleTextBlockStyle}" Text="Description" />
                            </toolkit:DataColumn>
                        </toolkit:DataTable>
                    </ListView.Header>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="models:IReportItemProvider" x:DefaultBindMode="OneWay">
                            <toolkit:DataRow HorizontalAlignment="Left">
                                <TextBlock TextWrapping="WrapWholeWords" Text="{x:Bind Type}"/>
                                <TextBlock TextWrapping="WrapWholeWords" Text="{x:Bind Category}"/>
                                <TextBlock TextWrapping="WrapWholeWords" Text="{x:Bind Name}"/>
                                <TextBlock TextWrapping="WrapWholeWords" Text="{x:Bind Description}"/>
                            </toolkit:DataRow>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </toolkit:HeaderedContentControl>

        <Expander x:Name="OperationalLogExpander"
                  Grid.Row="2"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Stretch"
                  Header="Operation Log">
            <!--  Use VerticalAnchorRatio 1.0 to prefer to be on the bottom of the incoming items  -->
            <ScrollView Height="320"
                        VerticalAnchorRatio="1.0">
                <ItemsControl ItemsSource="{x:Bind Logger.LogItems}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate x:DataType="services:LogItemData">
                            <TextBlock Foreground="{x:Bind Level, Converter={StaticResource LevelToColorSwitchConverter}}"
                                       Text="{x:Bind Message}"
                                       TextWrapping="Wrap" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollView>
        </Expander>
    </Grid>
    <!--  TODO: We should have a status with a progress bar and the count of reports done vs. total, etc...  -->
    <!--  TODO: Can we cancel all this? (i.e. add cancel button?)  -->

</Page>
